version: '2.2'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-auth:/etc/nginx/htpasswd
      - ./nginx-conf:/etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /etc/nginx/certs
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always

  syntropynet-agent:
    image: syntropynet/agent:stable
    hostname: syntropynet-agent
    container_name: syntropynet-agent
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - SYNTROPY_API_KEY=xxx # <==== Your token goes here
      - SYNTROPY_NETWORK_API=docker
      - SYNTROPY_AGENT_NAME="kibana+ngnix"
      - SYNTROPY_PROVIDER=1 # <==== change this
      - SYNTROPY_LOG_LEVEL=10
      - SYNTROPY_TAGS="kibana+ngnix"
      - SYNTROPY_SERVICES_STATUS=false # default is false
    restart: always
    network_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    devices:
      - "/dev/net/tun:/dev/net/tun"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      discovery.type: "single-node"
      LETSENCRYPT_HOST: kibanatesting.duckdns.org
      LETSENCRYPT_EMAIL: mart.madisson@gmail.com
    depends_on:
      - syntropynet-agent

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24